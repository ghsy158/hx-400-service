<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task.xsd">

	<context:property-placeholder location="classpath:config.properties" />

	<!-- 阿里 druid数据库连接池 -->
	<bean id="mySqlDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <!-- 数据库基本信息配置 -->
        <!-- 数据库基本信息配置 -->
		<property name="driverClassName" value="${jdbc.mysql.driverClassName}" />
		<property name="url" value="${jdbc.mysql.url}" />
		<property name="username" value="${jdbc.mysql.username}" />
		<property name="password" value="${jdbc.mysql.password}" />
<!--          <property name="filters" value="${jdbc.filters}" />   -->
<!--    		 最大并发连接数 -->
<!--          <property name="maxActive" value="${jdbc.maxActive}" /> -->
<!--          初始化连接数量 -->
<!--          <property name="initialSize" value="${jdbc.initialSize}" /> -->
<!--          配置获取连接等待超时的时间 -->
<!--          <property name="maxWait" value="${jdbc.maxWait}" /> -->
<!--          最小空闲连接数 -->
<!--          <property name="minIdle" value="${jdbc.minIdle}" />   -->
<!--    		 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
<!--          <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" /> -->
<!--          配置一个连接在池中最小生存的时间，单位是毫秒 -->
<!--          <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />   -->
<!--          <property name="validationQuery" value="${jdbc.validationQuery}" />   -->
<!--          <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />   -->
<!--          <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />   -->
<!--          <property name="testOnReturn" value="${jdbc.testOnReturn}" />   -->
<!--          <property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" /> -->
<!--          打开removeAbandoned功能 -->
<!--          <property name="removeAbandoned" value="${jdbc.removeAbandoned}" /> -->
<!--          1800秒，也就是30分钟 -->
<!--          <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" /> -->
<!--          关闭abanded连接时输出错误日志    -->
<!--          <property name="logAbandoned" value="${jdbc.logAbandoned}" /> -->
	</bean>  
	
	<!-- 阿里 druid数据库连接池 -->
	<bean id="sqlServerDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <!-- 数据库基本信息配置 -->
        <!-- 数据库基本信息配置 -->
		<property name="driverClassName" value="${jdbc.sqlserver.driverClassName}" />
		<property name="url" value="${jdbc.sqlserver.url}" />
		<property name="username" value="${jdbc.sqlserver.username}" />
		<property name="password" value="${jdbc.sqlserver.password}" />
<!--          <property name="filters" value="${jdbc.filters}" />   -->
<!--    		 最大并发连接数 -->
<!--          <property name="maxActive" value="${jdbc.maxActive}" /> -->
<!--          初始化连接数量 -->
<!--          <property name="initialSize" value="${jdbc.initialSize}" /> -->
<!--          配置获取连接等待超时的时间 -->
<!--          <property name="maxWait" value="${jdbc.maxWait}" /> -->
<!--          最小空闲连接数 -->
<!--          <property name="minIdle" value="${jdbc.minIdle}" />   -->
<!--    		 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
<!--          <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" /> -->
<!--          配置一个连接在池中最小生存的时间，单位是毫秒 -->
<!--          <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />   -->
<!--          <property name="validationQuery" value="${jdbc.validationQuery}" />   -->
<!--          <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />   -->
<!--          <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />   -->
<!--          <property name="testOnReturn" value="${jdbc.testOnReturn}" />   -->
<!--          <property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" /> -->
<!--          打开removeAbandoned功能 -->
<!--          <property name="removeAbandoned" value="${jdbc.removeAbandoned}" /> -->
<!--          1800秒，也就是30分钟 -->
<!--          <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" /> -->
<!--          关闭abanded连接时输出错误日志    -->
<!--          <property name="logAbandoned" value="${jdbc.logAbandoned}" /> -->
	</bean>  

	<bean id="multipleDataSource" class="fgh.common.datasource.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="mySqlDataSource"/>
        <property name="targetDataSources">
            <map>
                <entry key="mySqlDataSource" value-ref="mySqlDataSource"/>
                <entry key="sqlServerDataSource" value-ref="sqlServerDataSource"/>
            </map>
        </property>
    </bean>
    
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource"></property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 扫描自动任务的注解 -->
	<task:annotation-driven/>
	
	<!-- 启用注解 -->
	<context:annotation-config />

	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.huaxia" />

	<aop:aspectj-autoproxy />

	<!-- 配置dubbo服务 -->
	<import resource="classpath:dubbo-provider.xml"/>
</beans>
